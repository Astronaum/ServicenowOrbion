<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1539348_so_org_so</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Envoyer les organisations à l'API SCIM</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	

	if (!gs.hasRole('x_1539348_so.manager')) {
        // If the user does not have the role, prevent modification of the approval_status field
        if (current.isNewRecord() || current.approval_status.changes()) {
            current.setAbortAction(true); // Abort the action (field modification)
            gs.addErrorMessage('You do not have the required role to modify the approval status.');
        }
    }

	/*if (current.approval_status == 'Approved' && previous.approval_status != 'Approved') {
    var data = {
        "schemas": ["urn:ietf:params:scim:schemas:core:evidian:2.0:Organization"],
        "name": current.name.toString(),
        "displayName": current.displayname.toString(),
        "code": current.code.toString(),
		"type": [],
        "mailDomain": [],
        "active": true,
		"parents": [
        ],
        "description": current.description.toString()
    };

    // Convertir l'objet en chaîne JSON
    var jsonData = JSON.stringify(data);

    // Configurer la requête HTTP
    var request = new sn_ws.RESTMessageV2();
    request.setEndpoint('https://earth-apis.my.evidian.com/scim/v2/api/Organizations'); // Remplacez l'endpoint si nécessaire
    request.setHttpMethod('POST');
    request.setRequestHeader('Content-Type', 'application/json');
	var token = gs.getProperty('x_1539348_so.scim.api.token');
    if (!token) {
        gs.error('Authorization token is missing. Set it in System Properties.');
        return;
    }
    request.setRequestHeader('Authorization', 'Bearer ' + token);
    request.setRequestBody(jsonData);

    // Envoyer la requête
    try {
        var response = request.execute();
        var responseBody = response.getBody();
        var httpStatus = response.getStatusCode();

        // Log de la réponse pour le débogage
        gs.info('Statut HTTP: ' + httpStatus);
        gs.info('Corps de la réponse: ' + responseBody);

        // Gérer la réponse en fonction du code de statut
        if (httpStatus == 201 || httpStatus == 200) {
            gs.info('Données envoyées avec succès à l\'API SCIM.');
        } else {
            gs.error('Erreur lors de l\'envoi des données: ' + responseBody);
        }
    } catch(ex) {
        var message = ex.getMessage();
        gs.error('Exception lors de l\'appel API: ' + message);
    }
	}*/

})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-11-25 13:29:31</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>39372416834612103a32ffc6feaad327</sys_id>
        <sys_mod_count>28</sys_mod_count>
        <sys_name>Envoyer les organisations à l'API SCIM</sys_name>
        <sys_overrides/>
        <sys_package display_value="so" source="x_1539348_so">e2787a38830652103a32ffc6feaad3bd</sys_package>
        <sys_policy/>
        <sys_scope display_value="so">e2787a38830652103a32ffc6feaad3bd</sys_scope>
        <sys_update_name>sys_script_39372416834612103a32ffc6feaad327</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-11-27 10:59:21</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=39372416834612103a32ffc6feaad327"/>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>39372416834612103a32ffc6feaad327</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-11-25 13:29:31</sys_created_on>
        <sys_id>b2e8ec16834612103a32ffc6feaad3e4</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-11-25 13:29:31</sys_updated_on>
        <table>sys_script</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
